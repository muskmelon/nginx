server {
    # Redirect firearmscanada.com to www.firearmscanada.com
    server_name         firearmscanada.com;
    rewrite ^(.*)       http://www.firearmscanada.com$1 permanent;
}
 
server {
    # listen   *:80; 
    # listen to Varnish port 8080
    listen   127.0.0.1:8080; 
    
    # Tell nginx to handle requests for the www.firearmscanada.com domain
    server_name         www.firearmscanada.com;
    index               index.php index.html index.htm;
    root                /var/www;
        
    # Use gzip compression
    # gzip_static       on;  # Uncomment if you compiled Nginx using --with-http_gzip_static_module
    gzip                on;
    gzip_disable        "msie6";
    gzip_vary           on;
    gzip_proxied        any;
    gzip_comp_level     5;
    gzip_buffers        16 8k;
    gzip_http_version   1.0;
    gzip_types          text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/png image/gif image/jpeg;
              
    ## Rewrite minified CSS and JS files
    #location ~* \.(css|js) {
    #    if (!-f $request_filename) {
    #        rewrite ^/wp-content/w3tc/min/(.+\.(css|js))$ /wp-content/w3tc/min/index.php?file=$1 last;
    #        # Use the following line instead for versions of W3TC pre-0.9.2.2
    #        # rewrite ^/wp-content/w3tc/min/([a-f0-9]+)\/(.+)\.(include(\-(footer|body))?(-nb)?)\.[0-9]+\.(css|js)$ /wp-content/w3tc/min/index.php?tt=$1&gg=$2&g=$3&t=$7 last;
    #    }
    #}

# FOR W3 TOTAL CACHE ===============

    # Set a variable to work around the lack of nested conditionals
    set $cache_uri $request_uri;
    
    # POST requests and urls with a query string should always go to PHP
    if ($request_method = POST) {
        set $cache_uri 'no cache';
    }   
    if ($query_string != "") {
        set $cache_uri 'no cache';
    }   
    
    # Don't cache uris containing the following segments
    if ($request_uri ~* "(\/wp-admin\/|\/xmlrpc.php|\/wp-(app|cron|login|register|mail)\.php|wp-.*\.php|index\.php|wp\-comments\-popup\.php|wp\-links\-opml\.php|wp\-locations\.php)") {
        set $cache_uri "no cache";
    }
    
    # Don't use the cache for logged in users or recent commenters
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp\-postpass|wordpress_logged_in") {
        set $cache_uri 'no cache';
    }
    
    # Use cached or actual file if they exists, otherwise pass request to WordPress
    location / {
        try_files /wp-content/w3tc/pgcache/$cache_uri/_index.html $uri $uri/ /index.php?q=$uri&$args;
    }
 
    # Cache static files for as long as possible
    location ~* \.(xml|ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        try_files       $uri =404;
        expires         max;
        access_log      off;
    }

# FOR W3 TOTAL CACHE END ===============

    # Deny access to hidden files
    location ~* /\.ht {
        deny            all;
        access_log      off;
        log_not_found   off;
    }

    # Pass PHP scripts on to FastCGI to PHP-FPM
    location ~* \.php$ {
        # try_files $uri =404;
        try_files       $uri /index.php;
        fastcgi_index   index.php;
        # fastcgi_pass    127.0.0.1:9000;
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        include         fastcgi_params;
        fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
        include fastcgi_params;
    }
 
}
